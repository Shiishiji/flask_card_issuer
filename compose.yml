version: '3.4'

networks:
  kafka-network:
    driver: bridge

services:
  web:
    build:
      dockerfile: '_docker/web/Dockerfile'
      context: .
    networks:
      - kafka-network
    ports:
      - '5000:5000'

  kafka:
    image: 'bitnami/kafka:latest'
    networks:
      - kafka-network
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    networks:
      - kafka-network
    depends_on:
      kafka:
        condition: service_started
    ports:
      - '8080:8080'
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ./_docker/kui/config.yml:/etc/kafkaui/dynamic_config.yaml